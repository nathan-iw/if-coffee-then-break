# This is a basic workflow to help you get started with Actions
name: CI # name of the job
# Controls when the action will run. Triggers the workflow on pull request
# events but only for the master branch
on:
  push:
    # branches: [*] # will only run on branch that starts feature/
  pull_request:
    branches: [ master ] # will only run when requesting pull on master
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2 # premade action
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    # Runs a set of commands using the runners shell
    # pip install should only install packages required for this job - all others go in requirements.txt
    - name: setup
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    # - name: list_variables
    #   run: echo $DB_USER $DB_HOST_SAINS $DB_PW_SAINS $DB_NAME_SAINS
    #   env:
    #     DB_HOST_SAINS: ${{ secrets.DEV_HOST }}
    #     DB_USER_SAINS: ${{ secrets.DEV_USER }}
    #     DB_PW_SAINS: ${{ secrets.DEV_PW }}
    #     DB_NAME_SAINS: ${{ secrets.DEV_DB_NAME }}
    #     DB_HOST2: ${{ secrets.DEV_HOST2 }}
    #     DB_USER2: ${{ secrets.DEV_USER2 }}
    #     DB_PW2: ${{ secrets.DEV_PW2 }}
    #     DB_NAME2: ${{ secrets.DEV_DB_NAME2 }}

    - name: run unittest
      run: |
        python3 -m unittest
      env:
        DB_HOST_SAINS: ${{ secrets.DEV_HOST }}
        DB_USER_SAINS: ${{ secrets.DEV_USER }}
        DB_PW_SAINS: ${{ secrets.DEV_PW }}
        DB_NAME_SAINS: ${{ secrets.DEV_DB_NAME }}
        DB_HOST2: ${{ secrets.DEV_HOST2 }}
        DB_USER2: ${{ secrets.DEV_USER2 }}
        DB_PW2: ${{ secrets.DEV_PW2 }}
        DB_NAME2: ${{ secrets.DEV_DB_NAME2 }}  
          
    - name: run coverage
      env:
        DB_HOST_SAINS: ${{ secrets.DEV_HOST }}
        DB_USER_SAINS: ${{ secrets.DEV_USER }}
        DB_PW_SAINS: ${{ secrets.DEV_PW }}
        DB_NAME_SAINS: ${{ secrets.DEV_DB_NAME }}
        DB_HOST2: ${{ secrets.DEV_HOST2 }}
        DB_USER2: ${{ secrets.DEV_USER2 }}
        DB_PW2: ${{ secrets.DEV_PW2 }}
        DB_NAME2: ${{ secrets.DEV_DB_NAME2 }}
      run: |
        coverage run -m unittest
        coverage report      

    - name: Lint with flake8
      run: flake8 .